//
// Image gallery captions
//

.gallery-lightbox-item figcaption {
  font-family: var(--body-font-font-family);
  font-size: calc(1.2 * var(--base-font-size));
}

.gallery-lightbox-item[data-in="false"] figcaption {
  display: none !important;
}

//
// Links with underlines (the default)
//

@supports (text-decoration-thickness: 1px) and (text-underline-offset: 0.2em) {
  a span.sqsrte-text-color--darkAccent {
    //
    // Bizarre fix for Safari:
    //
    // When we have a link that uses a colored span to colorize some of the text,
    // Squarespace CSS targets the color span classes with a seemingly needless `inherit`:
    //
    //  [class^="sqsrte-text-color--"] {
    //     text-decoration: inherit
    //  }
    //
    // Chrome decides to inherit the `text-decoration-thickness` as it ought to
    // but Safari resets to something thicker than what was specified in the parent (1px)
    // and it looks odd.
    //
    // We'll wrap this in the same @supports as what Squarespace's site.css uses to condition this setting.
    //
    text-decoration-thickness: 1px;
  }
}

//
// Links without underlines
//

.no_underline {
  /* Making this available for any custom-styled text that might want it */
  text-decoration-line: none !important;
}

a {
  //
  // For this hack, we're selecting anchors that contain a child span with an explicit inline style
  // calling for a strike-through (`line-through`) which is what the SquareSpace editor generates, i.e.:
  //
  // - an interior span, it doesn't decorate the <a> itself
  // - an interior span with an inline `style=""` attribute
  //
  // Because the CSS attribute selector is a direct text match and not a regular expression,
  // we have to specify this twice:
  //
  // - once without a space in the middle of the `style` attribute (what SquareSpace generates)
  // - once with a space in the middle of the `style` attribute (which is what our VSCode-formatted test code defines)
  //
  // This hack is obviously on the fragile side, it's just (probably) the better choice compared to doing this in JavaScript.
  //
  // Note that we're selecting for spans inside an <a> so that non-anchor text can still get normal strike-throughs.
  //

  @mixin no_underline_span {
    // Remove underline
    text-decoration: none !important;

    // Treat this span as an inline block so we can break the inheritance of the text-decoration from its <a> parent
    display: inline-block;
  }

  span[style="text-decoration:line-through"] {
    @include no_underline_span();
  }
  span[style="text-decoration: line-through"] {
    @include no_underline_span();
  }
}

//
// Navigation: design preference: don't show underline for nav link for active section
// - for large screens only
// - for small screens, the media query-based underline in the full screen menu still works as intended
//

body:not(.header--menu-open) .header-nav-item--active > a {
  background-image: none;
  background-size: 0;
}

//
// Navigation: dropdown menu tweaks
//

div.header-nav-folder-content {
  // Smaller text
  font-size: 80%;

  // Slightly translucent background
  background-color: rgba(255, 255, 255, 0.8) !important;

  // Size it to content, otherwise it's sized a bit generously
  min-width: max-content !important;
}

//
// Navigation: highlight words in navigation menu entries
//

.header-nav-word-highlight {
  color: hsla(var(--darkAccent-hsl), 1); // References the SquareSpace design template
}

//
// Horizontal rule (divider)
//

.sqs-block-horizontalrule hr {
  // The design we want
  height: 0.3rem;
  border: 0.15rem solid red;

  // Punching out Squarespace design we don't want
  background-color: transparent;
}

//
// Email list signup: button color
//

.emailoctopus-form input[type="submit"] {
  background-color: red !important;
  border-color: red !important;
}

//
// Donate button
//

// Need to make this quite specific so they bind correctly (note the `.theop-button-donate` as the actual specific class)
.primary-button-style-solid .sqs-button-element--primary.theop-button-donate {
  // Spacing
  margin-right: 1em;
  // Shape
  border-radius: 1em;
  // Color
  color: black;
  background-color: #ffc439;
}

#siteWrapper .header-actions-action--cta .sqs-button-element--primary.theop-button-donate {
  // Text
  font-weight: bold;
}
